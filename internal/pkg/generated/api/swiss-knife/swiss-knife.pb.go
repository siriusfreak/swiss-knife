// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: swiss-knife.proto

package swissknife

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetGithubEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner          string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo           string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	StartTimestamp int64  `protobuf:"varint,3,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp   int64  `protobuf:"varint,4,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
}

func (x *GetGithubEventsRequest) Reset() {
	*x = GetGithubEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGithubEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGithubEventsRequest) ProtoMessage() {}

func (x *GetGithubEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGithubEventsRequest.ProtoReflect.Descriptor instead.
func (*GetGithubEventsRequest) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{0}
}

func (x *GetGithubEventsRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetGithubEventsRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *GetGithubEventsRequest) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *GetGithubEventsRequest) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

type GetGithubEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*GithubEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetGithubEventsResponse) Reset() {
	*x = GetGithubEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGithubEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGithubEventsResponse) ProtoMessage() {}

func (x *GetGithubEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGithubEventsResponse.ProtoReflect.Descriptor instead.
func (*GetGithubEventsResponse) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{1}
}

func (x *GetGithubEventsResponse) GetEvents() []*GithubEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type GithubEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Repo      string `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	Owner     string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	Payload   string `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp int64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	User      string `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GithubEvent) Reset() {
	*x = GithubEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubEvent) ProtoMessage() {}

func (x *GithubEvent) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubEvent.ProtoReflect.Descriptor instead.
func (*GithubEvent) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{2}
}

func (x *GithubEvent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GithubEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GithubEvent) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *GithubEvent) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GithubEvent) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *GithubEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GithubEvent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type CacheGithubEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo  string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Limit int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *CacheGithubEventsRequest) Reset() {
	*x = CacheGithubEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheGithubEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheGithubEventsRequest) ProtoMessage() {}

func (x *CacheGithubEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheGithubEventsRequest.ProtoReflect.Descriptor instead.
func (*CacheGithubEventsRequest) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{3}
}

func (x *CacheGithubEventsRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CacheGithubEventsRequest) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *CacheGithubEventsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CacheGithubEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CacheGithubEventsResponse) Reset() {
	*x = CacheGithubEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheGithubEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheGithubEventsResponse) ProtoMessage() {}

func (x *CacheGithubEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheGithubEventsResponse.ProtoReflect.Descriptor instead.
func (*CacheGithubEventsResponse) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{4}
}

type GetJIRATasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jql string `protobuf:"bytes,1,opt,name=jql,proto3" json:"jql,omitempty"`
}

func (x *GetJIRATasksRequest) Reset() {
	*x = GetJIRATasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJIRATasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJIRATasksRequest) ProtoMessage() {}

func (x *GetJIRATasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJIRATasksRequest.ProtoReflect.Descriptor instead.
func (*GetJIRATasksRequest) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{5}
}

func (x *GetJIRATasksRequest) GetJql() string {
	if x != nil {
		return x.Jql
	}
	return ""
}

type GetJIRATasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*JIRATask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetJIRATasksResponse) Reset() {
	*x = GetJIRATasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJIRATasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJIRATasksResponse) ProtoMessage() {}

func (x *GetJIRATasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJIRATasksResponse.ProtoReflect.Descriptor instead.
func (*GetJIRATasksResponse) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{6}
}

func (x *GetJIRATasksResponse) GetTasks() []*JIRATask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type JIRAFieldStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *JIRAFieldStatus) Reset() {
	*x = JIRAFieldStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIRAFieldStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIRAFieldStatus) ProtoMessage() {}

func (x *JIRAFieldStatus) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIRAFieldStatus.ProtoReflect.Descriptor instead.
func (*JIRAFieldStatus) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{7}
}

func (x *JIRAFieldStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type JIRAFieldParent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *JIRAFieldParent) Reset() {
	*x = JIRAFieldParent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIRAFieldParent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIRAFieldParent) ProtoMessage() {}

func (x *JIRAFieldParent) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIRAFieldParent.ProtoReflect.Descriptor instead.
func (*JIRAFieldParent) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{8}
}

func (x *JIRAFieldParent) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type JIRAFieldIssueType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *JIRAFieldIssueType) Reset() {
	*x = JIRAFieldIssueType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIRAFieldIssueType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIRAFieldIssueType) ProtoMessage() {}

func (x *JIRAFieldIssueType) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIRAFieldIssueType.ProtoReflect.Descriptor instead.
func (*JIRAFieldIssueType) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{9}
}

func (x *JIRAFieldIssueType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type JIRAFieldInOutwardIssue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *JIRAFieldInOutwardIssue) Reset() {
	*x = JIRAFieldInOutwardIssue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIRAFieldInOutwardIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIRAFieldInOutwardIssue) ProtoMessage() {}

func (x *JIRAFieldInOutwardIssue) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIRAFieldInOutwardIssue.ProtoReflect.Descriptor instead.
func (*JIRAFieldInOutwardIssue) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{10}
}

func (x *JIRAFieldInOutwardIssue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type JIRAFieldIssueLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InwardIssue  *JIRAFieldInOutwardIssue `protobuf:"bytes,1,opt,name=inwardIssue,proto3" json:"inwardIssue,omitempty"`
	OutwardIssue *JIRAFieldInOutwardIssue `protobuf:"bytes,2,opt,name=outwardIssue,proto3" json:"outwardIssue,omitempty"`
	Type         *JIRAFieldIssueType      `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *JIRAFieldIssueLink) Reset() {
	*x = JIRAFieldIssueLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIRAFieldIssueLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIRAFieldIssueLink) ProtoMessage() {}

func (x *JIRAFieldIssueLink) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIRAFieldIssueLink.ProtoReflect.Descriptor instead.
func (*JIRAFieldIssueLink) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{11}
}

func (x *JIRAFieldIssueLink) GetInwardIssue() *JIRAFieldInOutwardIssue {
	if x != nil {
		return x.InwardIssue
	}
	return nil
}

func (x *JIRAFieldIssueLink) GetOutwardIssue() *JIRAFieldInOutwardIssue {
	if x != nil {
		return x.OutwardIssue
	}
	return nil
}

func (x *JIRAFieldIssueLink) GetType() *JIRAFieldIssueType {
	if x != nil {
		return x.Type
	}
	return nil
}

type JIRATaskFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *JIRAFieldStatus      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	EpicKey    string                `protobuf:"bytes,2,opt,name=epicKey,proto3" json:"epicKey,omitempty"`
	Summary    string                `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Parent     *JIRAFieldParent      `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	IssueLinks []*JIRAFieldIssueLink `protobuf:"bytes,5,rep,name=issueLinks,proto3" json:"issueLinks,omitempty"`
	IssueType  *JIRAFieldIssueType   `protobuf:"bytes,6,opt,name=issueType,proto3" json:"issueType,omitempty"`
}

func (x *JIRATaskFields) Reset() {
	*x = JIRATaskFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIRATaskFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIRATaskFields) ProtoMessage() {}

func (x *JIRATaskFields) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIRATaskFields.ProtoReflect.Descriptor instead.
func (*JIRATaskFields) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{12}
}

func (x *JIRATaskFields) GetStatus() *JIRAFieldStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *JIRATaskFields) GetEpicKey() string {
	if x != nil {
		return x.EpicKey
	}
	return ""
}

func (x *JIRATaskFields) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *JIRATaskFields) GetParent() *JIRAFieldParent {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *JIRATaskFields) GetIssueLinks() []*JIRAFieldIssueLink {
	if x != nil {
		return x.IssueLinks
	}
	return nil
}

func (x *JIRATaskFields) GetIssueType() *JIRAFieldIssueType {
	if x != nil {
		return x.IssueType
	}
	return nil
}

type JIRATask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Fields *JIRATaskFields `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *JIRATask) Reset() {
	*x = JIRATask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JIRATask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JIRATask) ProtoMessage() {}

func (x *JIRATask) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JIRATask.ProtoReflect.Descriptor instead.
func (*JIRATask) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{13}
}

func (x *JIRATask) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *JIRATask) GetFields() *JIRATaskFields {
	if x != nil {
		return x.Fields
	}
	return nil
}

type GetSavedJQLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSavedJQLRequest) Reset() {
	*x = GetSavedJQLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSavedJQLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSavedJQLRequest) ProtoMessage() {}

func (x *GetSavedJQLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSavedJQLRequest.ProtoReflect.Descriptor instead.
func (*GetSavedJQLRequest) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{14}
}

type GetSavedJQLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SavedJQL []*SavedJQL `protobuf:"bytes,1,rep,name=savedJQL,proto3" json:"savedJQL,omitempty"`
}

func (x *GetSavedJQLResponse) Reset() {
	*x = GetSavedJQLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSavedJQLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSavedJQLResponse) ProtoMessage() {}

func (x *GetSavedJQLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSavedJQLResponse.ProtoReflect.Descriptor instead.
func (*GetSavedJQLResponse) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{15}
}

func (x *GetSavedJQLResponse) GetSavedJQL() []*SavedJQL {
	if x != nil {
		return x.SavedJQL
	}
	return nil
}

type SavedJQL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Jql  string `protobuf:"bytes,3,opt,name=jql,proto3" json:"jql,omitempty"`
}

func (x *SavedJQL) Reset() {
	*x = SavedJQL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedJQL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedJQL) ProtoMessage() {}

func (x *SavedJQL) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedJQL.ProtoReflect.Descriptor instead.
func (*SavedJQL) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{16}
}

func (x *SavedJQL) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SavedJQL) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SavedJQL) GetJql() string {
	if x != nil {
		return x.Jql
	}
	return ""
}

type DeleteSavedJQLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSavedJQLRequest) Reset() {
	*x = DeleteSavedJQLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSavedJQLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSavedJQLRequest) ProtoMessage() {}

func (x *DeleteSavedJQLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSavedJQLRequest.ProtoReflect.Descriptor instead.
func (*DeleteSavedJQLRequest) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteSavedJQLRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSavedJQLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSavedJQLResponse) Reset() {
	*x = DeleteSavedJQLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSavedJQLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSavedJQLResponse) ProtoMessage() {}

func (x *DeleteSavedJQLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSavedJQLResponse.ProtoReflect.Descriptor instead.
func (*DeleteSavedJQLResponse) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{18}
}

type SaveJQLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Jql  string `protobuf:"bytes,2,opt,name=jql,proto3" json:"jql,omitempty"`
}

func (x *SaveJQLRequest) Reset() {
	*x = SaveJQLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveJQLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveJQLRequest) ProtoMessage() {}

func (x *SaveJQLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveJQLRequest.ProtoReflect.Descriptor instead.
func (*SaveJQLRequest) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{19}
}

func (x *SaveJQLRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveJQLRequest) GetJql() string {
	if x != nil {
		return x.Jql
	}
	return ""
}

type SaveJQLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveJQLResponse) Reset() {
	*x = SaveJQLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swiss_knife_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveJQLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveJQLResponse) ProtoMessage() {}

func (x *SaveJQLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swiss_knife_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveJQLResponse.ProtoReflect.Descriptor instead.
func (*SaveJQLResponse) Descriptor() ([]byte, []int) {
	return file_swiss_knife_proto_rawDescGZIP(), []int{20}
}

func (x *SaveJQLResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_swiss_knife_proto protoreflect.FileDescriptor

var file_swiss_knife_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x77, 0x69, 0x73, 0x73, 0x2d, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65,
	0x70, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x77, 0x69, 0x73,
	0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x47,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65,
	0x70, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x18, 0x43, 0x61, 0x63, 0x68, 0x65, 0x47, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x1b, 0x0a, 0x19, 0x43, 0x61, 0x63, 0x68, 0x65, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4a, 0x49, 0x52, 0x41, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6a, 0x71, 0x6c, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4a, 0x49, 0x52,
	0x41, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x4a, 0x49, 0x52, 0x41, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x4a, 0x49,
	0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x23, 0x0a, 0x0f, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x12, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x2b, 0x0a, 0x17, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x4f,
	0x75, 0x74, 0x77, 0x61, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xd8, 0x01,
	0x0a, 0x12, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x45, 0x0a, 0x0b, 0x69, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x73,
	0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x0b,
	0x69, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x6f,
	0x75, 0x74, 0x77, 0x61, 0x72, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x4a,
	0x49, 0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e,
	0x4a, 0x49, 0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x0e, 0x4a, 0x49, 0x52,
	0x41, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x77,
	0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x70, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66,
	0x65, 0x2e, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x4a, 0x49, 0x52, 0x41, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x4a, 0x49, 0x52, 0x41, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x08, 0x4a, 0x49, 0x52, 0x41, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69,
	0x66, 0x65, 0x2e, 0x4a, 0x49, 0x52, 0x41, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x61, 0x76, 0x65, 0x64, 0x4a,
	0x51, 0x4c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73,
	0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x08,
	0x73, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x22, 0x40, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x4a, 0x51, 0x4c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x71, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x71, 0x6c, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a,
	0x0e, 0x53, 0x61, 0x76, 0x65, 0x4a, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6a, 0x71, 0x6c, 0x22, 0x21, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x4a, 0x51, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xd6, 0x05, 0x0a, 0x0a, 0x53, 0x77, 0x69,
	0x73, 0x73, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x12, 0x6d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4a, 0x49,
	0x52, 0x41, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b,
	0x6e, 0x69, 0x66, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x49, 0x52, 0x41, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73,
	0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x49, 0x52, 0x41, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x69, 0x72, 0x61,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x6e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x4a, 0x51, 0x4c, 0x12, 0x1e, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69,
	0x66, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69,
	0x66, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x69, 0x72, 0x61, 0x2f, 0x73, 0x61, 0x76,
	0x65, 0x64, 0x2d, 0x6a, 0x71, 0x6c, 0x12, 0x7c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x12, 0x21, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73,
	0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x77,
	0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x61, 0x76, 0x65, 0x64, 0x4a, 0x51, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6a, 0x69, 0x72, 0x61, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x2d, 0x6a, 0x71, 0x6c, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x07, 0x53, 0x61, 0x76, 0x65, 0x4a, 0x51, 0x4c, 0x12,
	0x1a, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x4a, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x77,
	0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4a, 0x51, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x69, 0x72,
	0x61, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x2d, 0x6a, 0x71, 0x6c, 0x12, 0x88, 0x01, 0x0a, 0x11,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x24, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x77, 0x69, 0x73, 0x73, 0x6b,
	0x6e, 0x69, 0x66, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x79, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x77, 0x69, 0x73,
	0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x73, 0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x69, 0x72, 0x69, 0x75, 0x73, 0x66, 0x72, 0x65, 0x61, 0x6b, 0x2f, 0x73, 0x77, 0x69, 0x73,
	0x73, 0x2d, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x77, 0x69, 0x73, 0x73, 0x2d, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x3b, 0x73,
	0x77, 0x69, 0x73, 0x73, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_swiss_knife_proto_rawDescOnce sync.Once
	file_swiss_knife_proto_rawDescData = file_swiss_knife_proto_rawDesc
)

func file_swiss_knife_proto_rawDescGZIP() []byte {
	file_swiss_knife_proto_rawDescOnce.Do(func() {
		file_swiss_knife_proto_rawDescData = protoimpl.X.CompressGZIP(file_swiss_knife_proto_rawDescData)
	})
	return file_swiss_knife_proto_rawDescData
}

var file_swiss_knife_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_swiss_knife_proto_goTypes = []interface{}{
	(*GetGithubEventsRequest)(nil),    // 0: swissknife.GetGithubEventsRequest
	(*GetGithubEventsResponse)(nil),   // 1: swissknife.GetGithubEventsResponse
	(*GithubEvent)(nil),               // 2: swissknife.GithubEvent
	(*CacheGithubEventsRequest)(nil),  // 3: swissknife.CacheGithubEventsRequest
	(*CacheGithubEventsResponse)(nil), // 4: swissknife.CacheGithubEventsResponse
	(*GetJIRATasksRequest)(nil),       // 5: swissknife.GetJIRATasksRequest
	(*GetJIRATasksResponse)(nil),      // 6: swissknife.GetJIRATasksResponse
	(*JIRAFieldStatus)(nil),           // 7: swissknife.JIRAFieldStatus
	(*JIRAFieldParent)(nil),           // 8: swissknife.JIRAFieldParent
	(*JIRAFieldIssueType)(nil),        // 9: swissknife.JIRAFieldIssueType
	(*JIRAFieldInOutwardIssue)(nil),   // 10: swissknife.JIRAFieldInOutwardIssue
	(*JIRAFieldIssueLink)(nil),        // 11: swissknife.JIRAFieldIssueLink
	(*JIRATaskFields)(nil),            // 12: swissknife.JIRATaskFields
	(*JIRATask)(nil),                  // 13: swissknife.JIRATask
	(*GetSavedJQLRequest)(nil),        // 14: swissknife.GetSavedJQLRequest
	(*GetSavedJQLResponse)(nil),       // 15: swissknife.GetSavedJQLResponse
	(*SavedJQL)(nil),                  // 16: swissknife.SavedJQL
	(*DeleteSavedJQLRequest)(nil),     // 17: swissknife.DeleteSavedJQLRequest
	(*DeleteSavedJQLResponse)(nil),    // 18: swissknife.DeleteSavedJQLResponse
	(*SaveJQLRequest)(nil),            // 19: swissknife.SaveJQLRequest
	(*SaveJQLResponse)(nil),           // 20: swissknife.SaveJQLResponse
}
var file_swiss_knife_proto_depIdxs = []int32{
	2,  // 0: swissknife.GetGithubEventsResponse.events:type_name -> swissknife.GithubEvent
	13, // 1: swissknife.GetJIRATasksResponse.tasks:type_name -> swissknife.JIRATask
	10, // 2: swissknife.JIRAFieldIssueLink.inwardIssue:type_name -> swissknife.JIRAFieldInOutwardIssue
	10, // 3: swissknife.JIRAFieldIssueLink.outwardIssue:type_name -> swissknife.JIRAFieldInOutwardIssue
	9,  // 4: swissknife.JIRAFieldIssueLink.type:type_name -> swissknife.JIRAFieldIssueType
	7,  // 5: swissknife.JIRATaskFields.status:type_name -> swissknife.JIRAFieldStatus
	8,  // 6: swissknife.JIRATaskFields.parent:type_name -> swissknife.JIRAFieldParent
	11, // 7: swissknife.JIRATaskFields.issueLinks:type_name -> swissknife.JIRAFieldIssueLink
	9,  // 8: swissknife.JIRATaskFields.issueType:type_name -> swissknife.JIRAFieldIssueType
	12, // 9: swissknife.JIRATask.fields:type_name -> swissknife.JIRATaskFields
	16, // 10: swissknife.GetSavedJQLResponse.savedJQL:type_name -> swissknife.SavedJQL
	5,  // 11: swissknife.SwissKnife.GetJIRATasks:input_type -> swissknife.GetJIRATasksRequest
	14, // 12: swissknife.SwissKnife.GetSavedJQL:input_type -> swissknife.GetSavedJQLRequest
	17, // 13: swissknife.SwissKnife.DeleteSavedJQL:input_type -> swissknife.DeleteSavedJQLRequest
	19, // 14: swissknife.SwissKnife.SaveJQL:input_type -> swissknife.SaveJQLRequest
	3,  // 15: swissknife.SwissKnife.CacheGithubEvents:input_type -> swissknife.CacheGithubEventsRequest
	0,  // 16: swissknife.SwissKnife.GetGithubEvents:input_type -> swissknife.GetGithubEventsRequest
	6,  // 17: swissknife.SwissKnife.GetJIRATasks:output_type -> swissknife.GetJIRATasksResponse
	15, // 18: swissknife.SwissKnife.GetSavedJQL:output_type -> swissknife.GetSavedJQLResponse
	18, // 19: swissknife.SwissKnife.DeleteSavedJQL:output_type -> swissknife.DeleteSavedJQLResponse
	20, // 20: swissknife.SwissKnife.SaveJQL:output_type -> swissknife.SaveJQLResponse
	4,  // 21: swissknife.SwissKnife.CacheGithubEvents:output_type -> swissknife.CacheGithubEventsResponse
	1,  // 22: swissknife.SwissKnife.GetGithubEvents:output_type -> swissknife.GetGithubEventsResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_swiss_knife_proto_init() }
func file_swiss_knife_proto_init() {
	if File_swiss_knife_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_swiss_knife_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGithubEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGithubEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheGithubEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheGithubEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJIRATasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJIRATasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIRAFieldStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIRAFieldParent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIRAFieldIssueType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIRAFieldInOutwardIssue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIRAFieldIssueLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIRATaskFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JIRATask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSavedJQLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSavedJQLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedJQL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSavedJQLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSavedJQLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveJQLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swiss_knife_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveJQLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_swiss_knife_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_swiss_knife_proto_goTypes,
		DependencyIndexes: file_swiss_knife_proto_depIdxs,
		MessageInfos:      file_swiss_knife_proto_msgTypes,
	}.Build()
	File_swiss_knife_proto = out.File
	file_swiss_knife_proto_rawDesc = nil
	file_swiss_knife_proto_goTypes = nil
	file_swiss_knife_proto_depIdxs = nil
}
